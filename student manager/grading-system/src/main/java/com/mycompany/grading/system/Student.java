package com.mycompany.grading.system;


import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Lenovo
 */
public class Student extends javax.swing.JFrame {

    /**
     * Creates new form Student
     */
    public Student() {
        initComponents();
        listAll();
    }
private void listAll() {
    // Database connection parameters
    String url = "jdbc:mysql://localhost:3306/my_gradingsystem";
    String username = "root";
    String password = "22703380";

    try (Connection connection = DriverManager.getConnection(url, username, password)) {
        System.out.println("Connected to the database!");

        // Query to fetch all fish data
        String query = "SELECT * FROM Student";
        try (PreparedStatement statement = connection.prepareStatement(query);
             ResultSet resultSet = statement.executeQuery()) {

            // Clear existing table data
            DefaultTableModel model = (DefaultTableModel) std_table.getModel();
            model.setRowCount(0);

            // Populate the table with data from the database
            while (resultSet.next()) {
                Object[] row = {
                    resultSet.getInt("std_id"),
                    resultSet.getInt("std_no"),
                    resultSet.getString("std_name"),
                    resultSet.getString("std_surname"),
                    resultSet.getString("std_gender"),
                    resultSet.getString("std_nationality"),
                    resultSet.getDate("std_birthday")
                };
                model.addRow(row);
            }
        }
    } catch (SQLException ex) {
        System.err.println("Database connection error: " + ex.getMessage());
        ex.printStackTrace();
    }
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<>();
        javax.swing.JPanel jPanel1 = new javax.swing.JPanel();
        javax.swing.JLabel jLabel1 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel2 = new javax.swing.JLabel();
        txt_std_no = new javax.swing.JTextField();
        javax.swing.JLabel jLabel3 = new javax.swing.JLabel();
        txt_std_name = new javax.swing.JTextField();
        javax.swing.JLabel jLabel4 = new javax.swing.JLabel();
        txt_std_surname = new javax.swing.JTextField();
        btn_add_std = new javax.swing.JButton();
        btn_delete_std = new javax.swing.JButton();
        btn_clear_std = new javax.swing.JButton();
        javax.swing.JLabel s = new javax.swing.JLabel();
        javax.swing.JLabel l = new javax.swing.JLabel();
        txt_std_nation = new javax.swing.JTextField();
        javax.swing.JLabel jLabel5 = new javax.swing.JLabel();
        txt_std_bd = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        std_table = new javax.swing.JTable();
        btn_backup_std = new javax.swing.JButton();
        javax.swing.JSeparator jSeparator2 = new javax.swing.JSeparator();
        btn_delAll_std = new javax.swing.JButton();
        btn_restoreAll_std = new javax.swing.JButton();
        txt_std_gender = new javax.swing.JTextField();
        btn_edit = new javax.swing.JButton();

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(33, 33, 33));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("STUDENTS LIST");

        jLabel2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Student Number");

        txt_std_no.setToolTipText("");
        txt_std_no.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_std_noActionPerformed(evt);
            }
        });

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText(" Name");

        txt_std_name.setToolTipText("");

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Surname");
        jLabel4.setToolTipText("");

        txt_std_surname.setToolTipText("");
        txt_std_surname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_std_surnameActionPerformed(evt);
            }
        });

        btn_add_std.setBackground(new java.awt.Color(76, 175, 80));
        btn_add_std.setForeground(new java.awt.Color(255, 255, 255));
        btn_add_std.setText("Add");
        btn_add_std.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_add_stdActionPerformed(evt);
            }
        });

        btn_delete_std.setBackground(new java.awt.Color(244, 67, 54));
        btn_delete_std.setForeground(new java.awt.Color(255, 255, 255));
        btn_delete_std.setText("Delete");
        btn_delete_std.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_delete_stdActionPerformed(evt);
            }
        });

        btn_clear_std.setBackground(new java.awt.Color(33, 150, 243));
        btn_clear_std.setForeground(new java.awt.Color(255, 255, 255));
        btn_clear_std.setText("Clear");
        btn_clear_std.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_clear_stdActionPerformed(evt);
            }
        });

        s.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        s.setForeground(new java.awt.Color(255, 255, 255));
        s.setText("Student Gender");

        l.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        l.setForeground(new java.awt.Color(255, 255, 255));
        l.setText("Nationality");

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Birthday");

        txt_std_bd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_std_bdActionPerformed(evt);
            }
        });

        std_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Std No", "Name", "Surname", "Gender", "Nationality", "Birthday"
            }
        ));
        jScrollPane1.setViewportView(std_table);
        if (std_table.getColumnModel().getColumnCount() > 0) {
            std_table.getColumnModel().getColumn(4).setResizable(false);
            std_table.getColumnModel().getColumn(5).setResizable(false);
        }

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 464, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        btn_backup_std.setBackground(new java.awt.Color(255, 152, 0));
        btn_backup_std.setForeground(new java.awt.Color(255, 255, 255));
        btn_backup_std.setText("Backup");
        btn_backup_std.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_backup_stdActionPerformed(evt);
            }
        });

        btn_delAll_std.setBackground(new java.awt.Color(211, 47, 47));
        btn_delAll_std.setForeground(new java.awt.Color(255, 255, 255));
        btn_delAll_std.setText("Delete All");
        btn_delAll_std.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_delAll_stdActionPerformed(evt);
            }
        });

        btn_restoreAll_std.setBackground(new java.awt.Color(139, 195, 74));
        btn_restoreAll_std.setForeground(new java.awt.Color(255, 255, 255));
        btn_restoreAll_std.setText("Restore");
        btn_restoreAll_std.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_restoreAll_stdActionPerformed(evt);
            }
        });

        btn_edit.setBackground(new java.awt.Color(102, 0, 102));
        btn_edit.setForeground(new java.awt.Color(255, 255, 255));
        btn_edit.setText("Edit");
        btn_edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_editActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(txt_std_surname, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txt_std_bd, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(s, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(txt_std_name, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(18, 18, 18)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(l, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(txt_std_nation, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addComponent(txt_std_no, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(btn_add_std, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(btn_clear_std, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addComponent(txt_std_gender, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(btn_delete_std, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(btn_backup_std, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                        .addGap(10, 10, 10)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(btn_edit, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE)
                                            .addComponent(btn_restoreAll_std, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(21, 21, 21))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(btn_delAll_std, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(123, 123, 123)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 13, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_std_no, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(l)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(135, 135, 135)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_std_nation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_std_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_std_bd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_std_surname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(s, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_std_gender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_add_std, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_delete_std, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_edit, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_clear_std, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_backup_std, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_restoreAll_std, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_delAll_std, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(17, 17, 17))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 6, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_clear_stdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_clear_stdActionPerformed
        // TODO add your handling code here:
        txt_std_name.setText("");
        txt_std_surname.setText("");
        txt_std_nation.setText("");
        txt_std_no.setText("");
        txt_std_gender.setText("");
        txt_std_bd.setText("");
                listAll();

    }//GEN-LAST:event_btn_clear_stdActionPerformed

    private void btn_delete_stdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_delete_stdActionPerformed
   int row = std_table.getSelectedRow(); // Get the selected row index
    if (row >= 0) { // Ensure a valid row is selected
        // Retrieve the primary key (fish_id) of the selected row
        DefaultTableModel model = (DefaultTableModel) std_table.getModel();
        int id = (int) model.getValueAt(row, 0); // Assuming 'fish_id' is the first column (index 0)

        // Confirm with the user before deletion
        int confirmation = JOptionPane.showConfirmDialog(null,
                "Are you sure you want to delete this record?",
                "Delete Confirmation",
                JOptionPane.YES_NO_OPTION);

        if (confirmation == JOptionPane.YES_OPTION) {
            String url = "jdbc:mysql://localhost:3306/my_gradingsystem";
            String username = "root";
            String password = "22703380";

            try (Connection connection = DriverManager.getConnection(url, username, password)) {
                System.out.println("Connected to the database!");

                // Use the fish_id to delete the correct record
                  GradingSystem.Student.delete_student(id, connection);
                listAll();
            } catch (SQLException ex) {
                System.err.println("Database connection error: " + ex.getMessage());
                ex.printStackTrace();
            }
        }
    } else {
        // Display a message if no row is selected
        JOptionPane.showMessageDialog(null, "Please select a row to delete.");
    }

    }//GEN-LAST:event_btn_delete_stdActionPerformed

    private void txt_std_surnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_std_surnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_std_surnameActionPerformed

    private void btn_add_stdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_add_stdActionPerformed
        
        String name = txt_std_name.getText();
        String surname = txt_std_surname.getText();
        String nation = txt_std_nation.getText();
        String stdno = txt_std_no.getText();
        String genderInput = txt_std_gender.getText();
        String bd = txt_std_bd.getText();
        
        String url = "jdbc:mysql://localhost:3306/my_gradingsystem";
        String username = "root";
        String password = "22703380";
        java.sql.Date birthdate = GradingSystem.format_Date(bd);

          if (birthdate == null) {
              JOptionPane.showMessageDialog(this, "Invalid birthdate format. Please use dd/MM/yyyy.");
              return; 
          }
            char gender;
            if (genderInput != null && genderInput.length() == 1) {
                gender = genderInput.charAt(0);
            } else {
                JOptionPane.showMessageDialog(this, "Invalid gender input. Please enter a single character (e.g., 'M' or 'F').");
                return;
            }
            try (Connection connection = DriverManager.getConnection(url, username, password)) {
                System.out.println("Connected to the database!");
                  GradingSystem.Student.add_student(stdno, name, surname, gender, nation, birthdate, connection);
            } catch (SQLException ex) {
                System.err.println("Database connection error: " + ex.getMessage());
                ex.printStackTrace();
            }
         txt_std_name.setText("");
        txt_std_surname.setText("");
        txt_std_nation.setText("");
        txt_std_no.setText("");
        txt_std_gender.setText("");
        txt_std_bd.setText("");
        listAll();
    }//GEN-LAST:event_btn_add_stdActionPerformed

    private void txt_std_bdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_std_bdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_std_bdActionPerformed

    private void txt_std_noActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_std_noActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_std_noActionPerformed

    private void btn_editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_editActionPerformed
   int row = std_table.getSelectedRow(); 
        DefaultTableModel model = (DefaultTableModel) std_table.getModel();
        int id = (int) model.getValueAt(row, 0); 
        
// TODO add your handling code here:
         String name = txt_std_name.getText();
        String surname = txt_std_surname.getText();
        String nation = txt_std_nation.getText();
        String stdno = txt_std_no.getText();
        String genderInput = txt_std_gender.getText();
        String bd = txt_std_bd.getText();
        
        String url = "jdbc:mysql://localhost:3306/my_gradingsystem";
        String username = "root";
        String password = "22703380";
        java.sql.Date birthdate = GradingSystem.format_Date(bd);

          if (birthdate == null) {
              JOptionPane.showMessageDialog(this, "Invalid birthdate format. Please use dd/MM/yyyy.");
              return; 
          }
            char gender;
            if (genderInput != null && genderInput.length() == 1) {
                gender = genderInput.charAt(0);
            } else {
                JOptionPane.showMessageDialog(this, "Invalid gender input. Please enter a single character (e.g., 'M' or 'F').");
                return;
            }
            try (Connection connection = DriverManager.getConnection(url, username, password)) {
                System.out.println("Connected to the database!");
                  GradingSystem.Student.edit_student(id,stdno, name, surname, gender, nation, birthdate, connection);
            } catch (SQLException ex) {
                System.err.println("Database connection error: " + ex.getMessage());
                ex.printStackTrace();
            }
         txt_std_name.setText("");
        txt_std_surname.setText("");
        txt_std_nation.setText("");
        txt_std_no.setText("");
        txt_std_gender.setText("");
        txt_std_bd.setText("");
        listAll();
        
    }//GEN-LAST:event_btn_editActionPerformed

    private void btn_delAll_stdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_delAll_stdActionPerformed
        // TODO add your handling code here:
       
            String url = "jdbc:mysql://localhost:3306/my_gradingsystem";
            String username = "root";
            String password = "22703380";

            try (Connection connection = DriverManager.getConnection(url, username, password)) {
                System.out.println("Connected to the database!");

                // Use the fish_id to delete the correct record
                  GradingSystem.Student.delete_all_students(connection);
                listAll();
            } catch (SQLException ex) {
                System.err.println("Database connection error: " + ex.getMessage());
                ex.printStackTrace();
            }
        
   
    }//GEN-LAST:event_btn_delAll_stdActionPerformed

    private void btn_backup_stdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_backup_stdActionPerformed
        // TODO add your handling code here:
        String url = "jdbc:mysql://localhost:3306/my_gradingsystem";
            String username = "root";
            String password = "22703380";

            try (Connection connection = DriverManager.getConnection(url, username, password)) {
                System.out.println("Connected to the database!");

                // Use the fish_id to delete the correct record
                  GradingSystem.Student.backup_students(connection);
                listAll();
            } catch (SQLException ex) {
                System.err.println("Database connection error: " + ex.getMessage());
                ex.printStackTrace();
            }
    }//GEN-LAST:event_btn_backup_stdActionPerformed

    private void btn_restoreAll_stdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_restoreAll_stdActionPerformed
        // TODO add your handling code here:
        String url = "jdbc:mysql://localhost:3306/my_gradingsystem";
            String username = "root";
            String password = "22703380";

            try (Connection connection = DriverManager.getConnection(url, username, password)) {
                System.out.println("Connected to the database!");

                // Use the fish_id to delete the correct record
                  GradingSystem.Student.restore_students(connection);
                listAll();
            } catch (SQLException ex) {
                System.err.println("Database connection error: " + ex.getMessage());
                ex.printStackTrace();
            }
    }//GEN-LAST:event_btn_restoreAll_stdActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Student.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Student.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Student.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Student.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Student().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_add_std;
    private javax.swing.JButton btn_backup_std;
    private javax.swing.JButton btn_clear_std;
    private javax.swing.JButton btn_delAll_std;
    private javax.swing.JButton btn_delete_std;
    private javax.swing.JButton btn_edit;
    private javax.swing.JButton btn_restoreAll_std;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable std_table;
    private javax.swing.JTextField txt_std_bd;
    private javax.swing.JTextField txt_std_gender;
    private javax.swing.JTextField txt_std_name;
    private javax.swing.JTextField txt_std_nation;
    private javax.swing.JTextField txt_std_no;
    private javax.swing.JTextField txt_std_surname;
    // End of variables declaration//GEN-END:variables
}

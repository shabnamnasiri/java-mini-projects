package com.mycompany.grading.system;


import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Lenovo
 */
public class Grade extends javax.swing.JFrame {

    /**
     * Creates new form Grade
     */
    public Grade() {
        initComponents();
        listAll();
    }
private void listAll() {
    // Database connection parameters
    String url = "jdbc:mysql://localhost:3306/my_gradingsystem";
    String username = "root";
    String password = "22703380";

    try (Connection connection = DriverManager.getConnection(url, username, password)) {
        System.out.println("Connected to the database!");

        // Query to fetch all fish data
        String query = "SELECT * FROM grades";
        try (PreparedStatement statement = connection.prepareStatement(query);
             ResultSet resultSet = statement.executeQuery()) {

            // Clear existing table data
            DefaultTableModel model = (DefaultTableModel) grd_table.getModel();
            model.setRowCount(0);

            // Populate the table with data from the database
            while (resultSet.next()) {
                Object[] row = {
                    resultSet.getInt("grd_id"),
                    resultSet.getInt("std_id"),
                    resultSet.getInt("crs_id"),
                    resultSet.getFloat("grd_mt"),
                     resultSet.getFloat("grd_hw"),
                     resultSet.getFloat("grd_final"),
                     resultSet.getString("grd_lgrade")
                };
                model.addRow(row);
            }
        }
    } catch (SQLException ex) {
        System.err.println("Database connection error: " + ex.getMessage());
        ex.printStackTrace();
    }
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        javax.swing.JPanel jPanel1 = new javax.swing.JPanel();
        javax.swing.JLabel jLabel2 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel3 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel4 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel5 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel6 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel7 = new javax.swing.JLabel();
        txt_crs_id = new javax.swing.JTextField();
        txt_std_id = new javax.swing.JTextField();
        txt_mt = new javax.swing.JTextField();
        txt_hw = new javax.swing.JTextField();
        txt_f = new javax.swing.JTextField();
        txt_lg = new javax.swing.JTextField();
        btn_add_grade = new javax.swing.JButton();
        btn_delete_gade = new javax.swing.JButton();
        btn_clear_grade = new javax.swing.JButton();
        btn_backup_grade = new javax.swing.JButton();
        btn_delAll_grade = new javax.swing.JButton();
        btn_restoreAll_grade = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        grd_table = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        javax.swing.JLabel jLabel8 = new javax.swing.JLabel();
        btn_edit = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(33, 33, 33));

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Course ID");

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Student ID");

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("midterm");

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Final");

        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("HW");
        jLabel6.setToolTipText("");

        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Letter Grade");
        jLabel7.setToolTipText("");

        txt_crs_id.setToolTipText("");

        txt_std_id.setToolTipText("");

        txt_mt.setToolTipText("");

        txt_hw.setToolTipText("");

        txt_f.setToolTipText("");

        txt_lg.setToolTipText("");

        btn_add_grade.setBackground(new java.awt.Color(76, 175, 80));
        btn_add_grade.setForeground(new java.awt.Color(255, 255, 255));
        btn_add_grade.setText("Add");
        btn_add_grade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_add_gradeActionPerformed(evt);
            }
        });

        btn_delete_gade.setBackground(new java.awt.Color(244, 67, 54));
        btn_delete_gade.setForeground(new java.awt.Color(255, 255, 255));
        btn_delete_gade.setText("Delete");
        btn_delete_gade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_delete_gadeActionPerformed(evt);
            }
        });

        btn_clear_grade.setBackground(new java.awt.Color(33, 150, 243));
        btn_clear_grade.setForeground(new java.awt.Color(255, 255, 255));
        btn_clear_grade.setText("Clear");
        btn_clear_grade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_clear_gradeActionPerformed(evt);
            }
        });

        btn_backup_grade.setBackground(new java.awt.Color(255, 152, 0));
        btn_backup_grade.setForeground(new java.awt.Color(255, 255, 255));
        btn_backup_grade.setText("Backup");
        btn_backup_grade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_backup_gradeActionPerformed(evt);
            }
        });

        btn_delAll_grade.setBackground(new java.awt.Color(211, 47, 47));
        btn_delAll_grade.setForeground(new java.awt.Color(255, 255, 255));
        btn_delAll_grade.setText("Delete All");
        btn_delAll_grade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_delAll_gradeActionPerformed(evt);
            }
        });

        btn_restoreAll_grade.setBackground(new java.awt.Color(139, 195, 74));
        btn_restoreAll_grade.setForeground(new java.awt.Color(255, 255, 255));
        btn_restoreAll_grade.setText("Restore All");
        btn_restoreAll_grade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_restoreAll_gradeActionPerformed(evt);
            }
        });

        grd_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "grdID", "stdID", "crsID", "MT", "HW", "F", "Letter"
            }
        ));
        jScrollPane2.setViewportView(grd_table);

        jLabel8.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Grade List");

        btn_edit.setBackground(new java.awt.Color(102, 0, 102));
        btn_edit.setForeground(new java.awt.Color(255, 255, 255));
        btn_edit.setText("Edit");
        btn_edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_editActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSeparator1)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btn_clear_grade, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btn_add_grade, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btn_backup_grade, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE)
                                    .addComponent(btn_delete_gade, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btn_restoreAll_grade, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE)
                                    .addComponent(btn_edit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(25, 25, 25))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(txt_std_id, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel3)
                                                .addComponent(txt_mt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel6))
                                        .addGap(18, 18, 18))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(txt_hw, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txt_lg, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txt_crs_id, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txt_f, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel7)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(14, 14, 14)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(67, 67, 67)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(105, 105, 105)
                                .addComponent(btn_delAll_grade, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel8)
                .addGap(38, 38, 38)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_std_id, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_crs_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_mt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_f, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_hw, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_lg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 61, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_add_grade, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_delete_gade, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_restoreAll_grade, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_clear_grade, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_backup_grade, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_edit, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_delAll_grade, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_delete_gadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_delete_gadeActionPerformed
        // TODO add your handling code here:
     int row = grd_table.getSelectedRow(); // Get the selected row index
    if (row >= 0) { 
        DefaultTableModel model = (DefaultTableModel) grd_table.getModel();
        int id = (int) model.getValueAt(row, 0); 
        int confirmation = JOptionPane.showConfirmDialog(null,
                "Are you sure you want to delete this record?",
                "Delete Confirmation",
                JOptionPane.YES_NO_OPTION);

        if (confirmation == JOptionPane.YES_OPTION) {
            String url = "jdbc:mysql://localhost:3306/my_gradingsystem";
            String username = "root";
            String password = "22703380";

            try (Connection connection = DriverManager.getConnection(url, username, password)) {
                System.out.println("Connected to the database!");

                  GradingSystem.Grades.deleteGradeById(id, connection);
                listAll();
            } catch (SQLException ex) {
                System.err.println("Database connection error: " + ex.getMessage());
                ex.printStackTrace();
            }
        }
    } else {
        // Display a message if no row is selected
        JOptionPane.showMessageDialog(null, "Please select a row to delete.");
    }

    }//GEN-LAST:event_btn_delete_gadeActionPerformed

    private void btn_clear_gradeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_clear_gradeActionPerformed
        // TODO add your handling code here:
        txt_crs_id.setText("");
        txt_std_id.setText("");
        txt_mt.setText("");
        txt_f.setText("");
        txt_hw.setText("");
        txt_lg.setText("");
                listAll();

    }//GEN-LAST:event_btn_clear_gradeActionPerformed

    private void btn_add_gradeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_add_gradeActionPerformed
                                          
        
        int crs_id = Integer.parseInt(txt_crs_id.getText());
         int std_id =Integer.parseInt(txt_std_id.getText());
         float mt = Float.parseFloat(txt_mt.getText()); 
         float f = Float.parseFloat(txt_f.getText());
        float hw = Float.parseFloat(txt_hw.getText());
        String lg = txt_lg.getText().trim();
        
        String url = "jdbc:mysql://localhost:3306/my_gradingsystem";
        String username = "root";
        String password = "22703380";

        try (Connection connection = DriverManager.getConnection(url, username, password)) {
            System.out.println("Connected to the database!");
            GradingSystem.Grades.add_grade(std_id, crs_id, mt, hw, f, lg, connection);
        } catch (SQLException ex) {
            System.err.println("Database connection error: " + ex.getMessage());
            ex.printStackTrace();
        }
        txt_crs_id.setText("");
        txt_std_id.setText("");
        txt_mt.setText("");
        txt_f.setText("");
        txt_hw.setText("");
        txt_lg.setText("");
                listAll();

    }//GEN-LAST:event_btn_add_gradeActionPerformed

    private void btn_backup_gradeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_backup_gradeActionPerformed
        // TODO add your handling code here:
                    String url = "jdbc:mysql://localhost:3306/my_gradingsystem";
            String username = "root";
            String password = "22703380";

            try (Connection connection = DriverManager.getConnection(url, username, password)) {
                System.out.println("Connected to the database!");

                  GradingSystem.Grades.backupGrades(connection);
                listAll();
            } catch (SQLException ex) {
                System.err.println("Database connection error: " + ex.getMessage());
                ex.printStackTrace();
            }
    }//GEN-LAST:event_btn_backup_gradeActionPerformed

    private void btn_editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_editActionPerformed
       int row = grd_table.getSelectedRow(); // Get the selected row index
        DefaultTableModel model = (DefaultTableModel) grd_table.getModel();
        int id = (int) model.getValueAt(row, 0); 
        
        int crs_id = Integer.parseInt(txt_crs_id.getText());
         int std_id =Integer.parseInt(txt_std_id.getText());
         float mt = Float.parseFloat(txt_mt.getText()); 
         float f = Float.parseFloat(txt_f.getText());
        float hw = Float.parseFloat(txt_hw.getText());
        String lg = txt_lg.getText().trim();
        
        String url = "jdbc:mysql://localhost:3306/my_gradingsystem";
        String username = "root";
        String password = "22703380";

        try (Connection connection = DriverManager.getConnection(url, username, password)) {
            System.out.println("Connected to the database!");
            GradingSystem.Grades.edit_grade(id, std_id, crs_id, mt, hw, f, lg, connection);
        } catch (SQLException ex) {
            System.err.println("Database connection error: " + ex.getMessage());
            ex.printStackTrace();
        }
        txt_crs_id.setText("");
        txt_std_id.setText("");
        txt_mt.setText("");
        txt_f.setText("");
        txt_hw.setText("");
        txt_lg.setText("");
        listAll();
    }//GEN-LAST:event_btn_editActionPerformed

    private void btn_delAll_gradeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_delAll_gradeActionPerformed
        // TODO add your handling code here:

            String url = "jdbc:mysql://localhost:3306/my_gradingsystem";
            String username = "root";
            String password = "22703380";

            try (Connection connection = DriverManager.getConnection(url, username, password)) {
                System.out.println("Connected to the database!");

                  GradingSystem.Grades.deleteAllGrades(connection);
                listAll();
            } catch (SQLException ex) {
                System.err.println("Database connection error: " + ex.getMessage());
                ex.printStackTrace();
            }
     

    }//GEN-LAST:event_btn_delAll_gradeActionPerformed

    private void btn_restoreAll_gradeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_restoreAll_gradeActionPerformed
        // TODO add your handling code here:
                    String url = "jdbc:mysql://localhost:3306/my_gradingsystem";
            String username = "root";
            String password = "22703380";

            try (Connection connection = DriverManager.getConnection(url, username, password)) {
                System.out.println("Connected to the database!");

                  GradingSystem.Grades.restoreGrades(connection);
                listAll();
            } catch (SQLException ex) {
                System.err.println("Database connection error: " + ex.getMessage());
                ex.printStackTrace();
            }
    }//GEN-LAST:event_btn_restoreAll_gradeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Grade.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Grade.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Grade.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Grade.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Grade().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_add_grade;
    private javax.swing.JButton btn_backup_grade;
    private javax.swing.JButton btn_clear_grade;
    private javax.swing.JButton btn_delAll_grade;
    private javax.swing.JButton btn_delete_gade;
    private javax.swing.JButton btn_edit;
    private javax.swing.JButton btn_restoreAll_grade;
    private javax.swing.JTable grd_table;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txt_crs_id;
    private javax.swing.JTextField txt_f;
    private javax.swing.JTextField txt_hw;
    private javax.swing.JTextField txt_lg;
    private javax.swing.JTextField txt_mt;
    private javax.swing.JTextField txt_std_id;
    // End of variables declaration//GEN-END:variables
}
